repositories {
    jcenter()
    maven {
        name 'lightbend-maven-release'
        url 'https://repo.lightbend.com/lightbend/maven-releases'
    }
    ivy {
        name 'lightbend-ivy-release'
        url 'https://repo.lightbend.com/lightbend/ivy-releases'
        layout 'ivy'
    }
}

apply plugin: 'play'
apply plugin: 'java'
apply plugin: 'nebula.provided-base'

def playVersion = '2.6.11'
def scalaVersion = '2.12'

dependencies {
    // Take all play dependencies and fake them as provided to have proper IDE support
    // This also makes java and provided required
    provided configurations.play
    // Provide generated classes by play to the IDE too
    provided files('build/libs/temporaryBuildFiles.jar')

    play project(':common')

    // Dependency injection
    play "com.typesafe.play:play-guice_$scalaVersion:$playVersion"

    // TODO Comes from a sample
    // Test stuff
    playTest 'org.assertj:assertj-core:3.8.0'
    playTest 'org.awaitility:awaitility:3.0.0'

    // Frontend stuff
    play "org.webjars:webjars-play_$scalaVersion:2.6.2"
    play 'org.webjars:bootstrap:4.0.0'
    play 'org.webjars:jquery:3.3.1'
}

// Playframework configuration
model {
    components.play {
        platform play: playVersion, scala: scalaVersion, java: JavaVersion.VERSION_1_8
        injectedRoutesGenerator = true

        sources {
            twirlTemplates {
                defaultImports = TwirlImports.JAVA
            }
        }
    }
}

// Java directory configuration (for the IDE)
sourceSets {
    main.java.srcDirs += file('app')
    main.resources.srcDirs += file('app/javascripts') // NOTE This is not applying yet
    test.java.srcDirs += file('test')
}

// Pack generated class files by play into a jar to get included as dependency (see at 'dependencies')
task makeTemporaryBuildFilesJar(type: Jar) {
    archiveName = 'temporaryBuildFiles.jar'
    from { fileTree('build/playBinary/classes') }
    with jar
}
tasks.getByName("dependencies").dependsOn(makeTemporaryBuildFilesJar)
// TODO compilePlayBinaryScala is not available
tasks.getByName("compileJava").dependsOn(makeTemporaryBuildFilesJar)
